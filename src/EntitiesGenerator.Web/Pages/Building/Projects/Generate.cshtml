@page "{id}"
@inject MvcHelper MvcHelper
@inject IDisplayNameCollector<ViewEntityByIdPageModel<string, Project, ProjectViewModel, IProjectManager<Project>>> displayNameCollector;
@model ViewEntityByIdPageModel<string, Project, ProjectViewModel, IProjectManager<Project>>
@{
    ViewData["FullWidthLayout"] = true;
    ViewData["Title"] = Model.Entity.Name;
    MvcHelper.SetActiveSubMenuItem(ViewData, "Projects");

    var emptyModule = new ModuleViewModel();
}

@section Head {
    <environment include="Development">
        <link href="~/assets/building/projects/generate/app.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <link href="~/assets/building/projects/generate/app.min.css" rel="stylesheet" asp-append-version="true" />
    </environment>
}

<section id="app" v-cloak>
    <generate-page read-only
                   api-url="@Url.Action("Get", "FullProjects")"
                   id="@Model.Entity.Id"
                   :display-names='@displayNameCollector.ToJson()'
                   return-url="@Url.Page("ViewProject", new { id = Model.Entity.Id })"></generate-page>
</section>

@section Scripts {
    <environment include="Development">
        <script src="~/assets/building/projects/generate/app.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/assets/building/projects/generate/app.min.js" asp-append-version="true"></script>
    </environment>
}
