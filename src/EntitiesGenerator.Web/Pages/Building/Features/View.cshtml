@page "{id}"
@inject MvcHelper MvcHelper
@inject IDisplayNameCollector<ViewEntityByIdPageModel<string, Feature, FeatureViewModel, IFeatureManager<Feature>>> displayNameCollector;
@model ViewEntityByIdPageModel<string, Feature, FeatureViewModel, IFeatureManager<Feature>>
@{
    ViewData["Title"] = Model.Entity.Name;
    MvcHelper.SetActiveSubMenuItem(ViewData, "Features");

    displayNameCollector.Collect(x => Model.Entity.IsActive, Html)
                        .Collect(x => Model.Entity.Position, Html)
                        .Collect(x => Model.Entity.Name, Html);
}

@section Head {
    <environment include="Development">
        <link href="~/assets/building/features/view/app.css" rel="stylesheet" />
    </environment>
    <environment exclude="Development">
        <link href="~/assets/building/features/view/app.min.css" rel="stylesheet" asp-append-version="true" />
    </environment>
}

<section id="app" v-cloak>
    <edit-page api-url="@Url.Action("Get", "Features")"
               id="@Model.Entity.Id"
               :display-names='@displayNameCollector.ToJson()'
               return-url="@Url.Page("Index")"></edit-page>
</section>

@section Scripts {
    <environment include="Development">
        <script src="~/assets/building/features/view/app.js"></script>
    </environment>
    <environment exclude="Development">
        <script src="~/assets/building/features/view/app.min.js" asp-append-version="true"></script>
    </environment>
}
